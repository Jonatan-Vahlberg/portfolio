{"version":3,"sources":["media/MYLI16.png","headshot_small.jpg","media/spotitheme.png","logo.svg","data.js","components/Navbar.js","components/About.js","components/Project.js","components/Projects.js","components/Contact.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","name","first","last","headerTagline","contactEmail","abouttext","aboutImage","ShowAboutImage","projects","id","title","service","imageSrc","url","desc","contact","mail","phone","gitHub","social","Navbar","scrollToTop","scroll","className","onClick","this","smooth","to","React","Component","About","bottom","cascade","data","src","headshot","alt","getCorrectImage","myli","spoti","Project","href","rel","Projects","map","item","Contact","link","index","key","target","Header","state","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e666213a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MYLI16.6b839283.png\";","module.exports = __webpack_public_path__ + \"static/media/headshot_small.115b1826.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spotitheme.bf6f26c1.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","export default {\r\n    name: {\r\n        first: 'Jonatan',\r\n        last: 'Vahlberg'\r\n    },\r\n    headerTagline: [\r\n        //Line 1 For Header\r\n        'Jonatan Vahlberg.',\r\n        //Line 2 For Header\r\n        'App Developer, Student ',\r\n        //Line 3 For Header\r\n        'from Sweden'\r\n    ],\r\n    contactEmail: 'jonatan.ramses.vahlberg@gmail.com',\r\n    abouttext: `I am a Swedish programmer from Stockholm, currently enrolled in a two year Application development course hosted by STI (Stockholm Institute of Technology).\r\n         The main goal with the course is to give budding programers a more real program closely tied with the current tech industry. \r\n         The course helps us develop a lot of different skills such as  \"HTML, CSS, SCCS, Javascript and NodeJS\" for web development. \"IOS/Swift, Java, xamarin and React-Native\" \r\n         for more native and hybrid mobile development. Alongside these skills we also develop a sense of UI/UX, \r\n         good clean coding, debugging, avoiding antipatterns, light database handling, working with APIs and perhaps most importantly, \r\n         internships with real companies, where we get to further develop our skills in real world projects.`,\r\n    aboutImage: './src/media/headshot.jpg',\r\n    ShowAboutImage: true,\r\n\r\n    projects: [\r\n        {\r\n            id: 1,\r\n            title: 'MyLi',\r\n            service: 'React-Native Application',\r\n\r\n            imageSrc: 'myli',\r\n\r\n            url: 'http://myli.se',\r\n            desc: `During fall 2019 I interned at MyIndicators a digital healthcare focused IT company. During my time there \r\n            i together with a SCRUM team developed an MVP (Minimum Viable Product) in the form of a Android focused React-Native hybrid application. \r\n            We dealt with everything from state management in Redux to navigation in RNRF while following a design document and a strict backend through an API. \r\n            This project was the first real project I took part in and it gave me a lot of insight into working for a company with deadlines and a supporting team. \r\n            If you like to know more about the work I did for MyIndicators you can either contact me or my supervisor at the company.`,\r\n            contact: {\r\n                name: 'Patrik Helenius',\r\n                title: 'Co founder of MyIndicators',\r\n                mail: 'patrik.helenius@myindicators.se',\r\n                phone: '+46 702 632 650'\r\n            }\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Spoti-Theme',\r\n            service: 'React-Native Application',\r\n            imageSrc: 'spoti',\r\n            desc: `Developed in school during a course relating to API connection and handling. Spoti-Theme is a smaller project that grabs \r\n            playlists from spotify's public API and through a Firebase database saves your preferences. The project was built over two weeks in early fall 2019. \r\n            It was built using Expo's fantastic React-Native wrapper and Firebase Cloud Firestore as it's database.`,\r\n            url: 'https://expo.io/@jonatan_vahlberg/spoty-theme',\r\n            gitHub: 'https://github.com/Jonatan-Vahlberg/spoti-theme'\r\n        }\r\n    ],\r\n    social: [\r\n        { name: 'Github', url: 'https://github.com/Jonatan-Vahlberg' },\r\n        {\r\n            name: 'LinkedIn',\r\n            url: 'https://www.linkedin.com/in/jonatan-vahlberg/'\r\n        }\r\n    ]\r\n};\r\n","import React from 'react';\r\nimport { Link, animateScroll as scroll } from 'react-scroll';\r\nimport data from '../data';\r\nclass Navbar extends React.Component {\r\n    scrollToTop = () => scroll.scrollToTop();\r\n\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link\r\n                            className='link'\r\n                            onClick={this.scrollToTop}\r\n                            smooth>\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className='link' to='about' smooth>\r\n                            About\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className='link' to='projects' smooth>\r\n                            Projects\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className='link' to='contact' smooth>\r\n                            Contact\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport data from '../data';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nimport headshot from '../headshot_small.jpg';\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='Scrollable-Block about' name='about'>\r\n                <h1 className='title'>\r\n                    <Fade bottom cascade>\r\n                        About\r\n                    </Fade>\r\n                </h1>\r\n                <Fade bottom>\r\n                    <p className='about-desc'>{data.abouttext}</p>\r\n                </Fade>\r\n                <img\r\n                    className='about-image'\r\n                    src={headshot}\r\n                    alt={'about image'}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport data from '../data';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nimport myli from '../media/MYLI16.png';\r\nimport spoti from '../media/spotitheme.png';\r\n\r\nconst Project = ({\r\n    url,\r\n    imageSrc,\r\n    title,\r\n    service,\r\n    desc,\r\n    contact = null,\r\n    gitHub = null\r\n}) => {\r\n    return (\r\n        <Fade bottom>\r\n            <div className='project'>\r\n                <a href={url}>\r\n                    <img\r\n                        className='project-image'\r\n                        src={getCorrectImage(imageSrc)}\r\n                    />\r\n                </a>\r\n                <h1>{title}</h1>\r\n                <span>{service}</span>\r\n                <p>{desc}</p>\r\n                {gitHub !== null && (\r\n                    <div className='header-title'>\r\n                        <button>\r\n                            <a href='https://github.com/Jonatan-Vahlberg/spoti-theme'>\r\n                                Check out on GitHub!\r\n                            </a>\r\n                        </button>\r\n                    </div>\r\n                )}\r\n                {contact !== null && (\r\n                    <div>\r\n                        <p>\r\n                            Name: <b>{contact.name}</b>, {contact.title}\r\n                        </p>\r\n                        <p>\r\n                            {'Mail: '}\r\n                            <a\r\n                                href={`mailto:${contact.mail}`}\r\n                                rel='noopener noreferrer'>\r\n                                <b>{contact.mail}</b>\r\n                            </a>\r\n                        </p>\r\n                        <p>\r\n                            Phone: <b>{contact.phone}</b>\r\n                        </p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Fade>\r\n    );\r\n};\r\n\r\nconst getCorrectImage = title => {\r\n    switch (title) {\r\n        case 'myli':\r\n            return myli;\r\n        case 'spoti':\r\n            return spoti;\r\n        default:\r\n            return myli;\r\n    }\r\n};\r\n\r\nexport default Project;\r\n","import React from 'react';\r\nimport data from '../data';\r\nimport Project from './Project';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nclass Projects extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='Scrollable-Block' name='projects'>\r\n                <Fade bottom cascade>\r\n                    <h1 className='projects-title title'>Projects.</h1>\r\n                </Fade>\r\n                <div className='projects'>\r\n                    {data.projects.map(item => (\r\n                        <Project {...item} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport Fade from 'react-reveal/Fade';\r\nimport data from '../data';\r\n\r\nclass Contact extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='Scrollable-Block contact' name='contact'>\r\n                <h1 className='title contact-title'>\r\n                    <Fade bottom cascade>\r\n                        {' '}\r\n                        Contact.\r\n                    </Fade>\r\n                </h1>\r\n                <Fade bottom>\r\n                    <div className='contact-content'>\r\n                        <h1>\r\n                            I look forward to <br></br>\r\n                            <span className='amazing-color'>\r\n                                hearing from you\r\n                            </span>\r\n                        </h1>\r\n                        <a\r\n                            href={`mailto:${data.contactEmail}`}\r\n                            className='email'>\r\n                            {data.contactEmail}\r\n                        </a>\r\n                        <ul>\r\n                            {data.social.map((link, index) => (\r\n                                <li key={index}>\r\n                                    <a\r\n                                        target='_blank'\r\n                                        rel='noopener noreferrer'\r\n                                        href={link.url}>\r\n                                        {link.name}\r\n                                    </a>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </Fade>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Fade from 'react-reveal/Fade';\r\nimport data from '../data';\r\n\r\nclass Header extends Component {\r\n    state = {};\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fade bottom>\r\n                    <p className='header-title'>\r\n                        {data.headerTagline[0]}\r\n                        <br></br>\r\n                        {data.headerTagline[1]}\r\n                        <br></br>\r\n                        {data.headerTagline[2]}\r\n                        <br></br>\r\n                        <button>\r\n                            <a\r\n                                href={`mailto:${data.contactEmail}`}\r\n                                rel='noopener noreferrer'>\r\n                                Contact\r\n                            </a>\r\n                        </button>\r\n                    </p>\r\n                </Fade>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\nimport Header from './components/Header';\n\nconst App = () => {\n    return (\n        <div className='App'>\n            <Navbar />;\n            <div className='App-Header'>\n                <Header />\n                <About />\n                <Projects />\n                <Contact />\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}